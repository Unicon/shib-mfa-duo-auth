plugins {
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.6'
    id 'net.researchgate.release' version '2.3.4'
}

apply plugin: 'groovy'
apply plugin: 'distribution'
apply plugin: 'maven'

configurations {
    provided
    compile.extendsFrom provided
}

task testme << {
    println "here: ${configurations}"
}

repositories {
    maven { url 'https://build.shibboleth.net/nexus/content/groups/public'}
    maven { url 'http://dl.bintray.com/uniconiam/maven' }
    jcenter()
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:${project.'groovy.version'}"
    compile "net.unicon.iam:duo-java:${project.'duo-java.version'}"
    compile "com.duosecurity:duo-client:0.2.1"

    provided "org.springframework:spring-context:${project.'spring.version'}"
    provided "org.springframework.webflow:spring-webflow:${project.'spring-webflow.version'}"
    provided "org.slf4j:slf4j-api:${project.'slf4j.version'}"
    provided "net.shibboleth.idp:idp-authn-api:${project.'shibboleth.version'}"
    provided "net.shibboleth.idp:idp-authn-impl:${project.'shibboleth.version'}"
    provided "net.shibboleth.idp:idp-session-api:${project.'shibboleth.version'}"
    provided "javax.servlet:javax.servlet-api:3.0.1"
    provided "com.google.guava:guava:${project.'guava.version'}"
}

distributions {
    main {
        contents {
            duplicatesStrategy = 'exclude'
            into ('edit-webapp/WEB-INF/lib') {
                from { project.jar }
                from { (project.configurations.compile - project.configurations.provided) }
            }
        }
    }
}

/*
bintray {
    user = bintrayUsername
    key = bintrayAPIKey
    pkg {
        repo = 'generic'
        name = rootProject.name
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/Unicon/shib-mfa-duo-auth.git'

        version {
            name = project.version
        }

        filesSpec {
            from distZip
            into '.'
        }
    }
}
 */

task sourceJar(type: Jar) {
    from sourceSets.main.allGroovy
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier 'sources'
            }

            pom.withXml {
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep -> dep.name == it.artifactId.text() } && !project.configurations.provided.allDependencies.find { dep -> dep.name == it.artifactId.text() }
                }.each {
                    it.scope*.value = 'compile'
                }
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.provided.allDependencies.find { dep -> dep.name == it.artifactId.text() }
                }.each {
                    it.scope*.value = 'provided'
                }
            }
        }
    }
}

task uploadDist(type: com.jfrog.bintray.gradle.BintrayUploadTask) {
    apiUrl = 'https://api.bintray.com'
    user = bintrayUsername
    apiKey = bintrayAPIKey
    packageName = rootProject.name
    repoName = 'generic'

    versionName = project.version
    packageLicenses = ['Apache-2.0']
    packageVcsUrl = 'https://github.com/Unicon/shib-mfa-duo-auth.git'

    dependsOn project.task(type: com.jfrog.bintray.gradle.RecordingCopyTask, com.jfrog.bintray.gradle.RecordingCopyTask.NAME).with {
        ConfigureUtil.configure({
            from distZip
            from distTar
            into '.'
        }, it)
        it.outputs.upToDateWhen {false}
        return it
    }
}

task uploadMaven(type: com.jfrog.bintray.gradle.BintrayUploadTask) {
    apiUrl = 'https://api.bintray.com'
    user = bintrayUsername
    apiKey = bintrayAPIKey
    packageName = rootProject.name
    repoName = 'maven'

    versionName = project.version
    packageLicenses = ['Apache-2.0']
    packageVcsUrl = 'https://github.com/Unicon/shib-mfa-duo-auth.git'

    publications = ['mavenJava']
    dependsOn build
    dependsOn 'generatePomFileForMavenJavaPublication'
    dependsOn sourceJar
}

afterReleaseBuild.dependsOn uploadDist
afterReleaseBuild.dependsOn uploadMaven

task wrapper(type: Wrapper) {
    gradleVersion = 2.4
}
